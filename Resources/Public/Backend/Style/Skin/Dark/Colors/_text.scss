/**
menue
 */
.scaffold-modulemenu {
  --scaffold-modulemenu-color: var(--color-main-menue-color);
}
.scaffold-header {
  --scaffold-header-color: var(--color-topbar-color);
}
.modulemenu-action.modulemenu-action-active:not(:has(~ul.collapse.show)) {
  --typo3-state-default-focus-color: var(--color-main-menue-color);
}
.modulemenu-action:focus-visible, .modulemenu-action:hover {
  --typo3-state-default-focus-color: var(--color-main-menue-color);
  --typo3-state-default-hover-color: var(--color-main-menue-color);
}
[type=button]:not(:disabled), [type=reset]:not(:disabled), [type=submit]:not(:disabled), button:not(:disabled) {
  --toolbar-item-link-color: var(--color-main-menue-color);
}
.open .toolbar-item-link, .toolbar-item-link.show, .toolbar-item-link:focus, .toolbar-item-link:hover {
  --typo3-state-default-focus-color: var(--color-main-menue-color);
  --toolbar-item-link-color-state: var(--color-main-menue-color);
}
.dropdown-menu {
  --typo3-component-color: var(--color-main-menue-color);
}
.dropdown-item:hover {
  --typo3-dropdown-item-hover-color: var(--color-main-menue-color);
}

/**
page tree
 */
.nodes-container, .nodes-loader {
  --tree-bg: var(--color-pagetree-color);
}
.node {
  --tree-node-color: var(--color-pagetree-color);
}
.node-hover, .node:hover {
  --tree-node-color: var(--color-pagetree-color);
}

/**
module
 */
.module {
  --module-color: var(--color-module-color);
}
.recordlist-heading {
  --typo3-table-color: var(--color-module-color);
}
.table {
  --typo3-component-color: var(--color-module-color);
}
.panel-heading {
  --typo3-panel-header-color: var(--color-module-color);
}

/**
element + modal
 */
.widget {
  --widget-color: var(--color-element-color);
}
a {
  --typo3-text-color-link: var(--color-highlight);
}
.dropdown-menu a:not([class]) {
  --typo3-component-link-color: var(--color-highlight);
}
// edit view of elements
.form-section {
  --typo3-text-color-base: var(--color-element-color);
}
.nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-item.show .nav-link:hover, .nav-tabs .nav-link.active, .nav-tabs .nav-link.active:hover {
  --typo3-nav-tabs-link-state-color: var(--color-element-color);
}
[type=button]:not(:disabled), [type=reset]:not(:disabled), [type=submit]:not(:disabled), button:not(:disabled) {
  --typo3-nav-tabs-link-state-color: var(--color-element-color);
  color: var(--typo3-nav-tabs-link-state-color);
}
// modal
.modal-content {
  --typo3-modal-color: var(--color-element-color);
}
.modal-header {
  --typo3-modal-header-color: var(--color-element-color);
}
.form-select {
  --typo3-input-focus-color: var(--color-element-color);
  --typo3-input-hover-color: var(--color-element-color);
  --typo3-input-color: var(--color-element-color);
}
.form-control {
  --typo3-input-focus-color: var(--color-element-color);
  --typo3-input-hover-color: var(--color-element-color);
  --typo3-input-color: var(--color-element-color);
  --typo3-form-control-placeholder-color: color-mix(in srgb, var(--color-element-color), transparent 50%);
  &::placeholder, &:placeholder-shown {
    color: var(--typo3-form-control-placeholder-color);
  }
}
.text-code, .text-code-emphasis, code {
  --typo3-text-color-code: var(--color-element-color);
}
.input-group-text {
  --typo3-input-color: var(--color-element-color);
}
.element-browser-body {
  .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, typo3-backend-editable-page-title {
    --bs-heading-color: var(--color-element-color);
  }
}
// callout
.callout-info {
  --typo3-surface-container-info-text: var(--color-element-color);
}
// treelist
.treelist, .treelist ul {
  --treelist-color: var(--color-element-color);
}
// alert-info
.alert-info {
  --typo3-alert-color: var(--color-element-color);
}
// context menu
body {
  --typo3-component-color: var(--color-element-color);
}

/**
button
 */
.btn-default {
  --typo3-state-default-color: var(--color-button-color);
  --typo3-state-default-hover-color: var(--color-button-color);
  --typo3-state-default-focus-color: var(--color-button-color);
  --typo3-state-default-disabled-color: var(--color-button-color);
}

/**
ckeditor
 */
.ck-reset_all :not(.ck-reset_all-excluded *), .ck.ck-reset_all {
  --ck-color-text: inherit;
}
html {
  &[data-color-scheme="light"] {
    .ck-reset_all :not(.ck-reset_all-excluded *), .ck.ck-reset_all {
      --ck-color-text: black;
    }
  }
}
